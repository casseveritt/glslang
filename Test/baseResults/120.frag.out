120.frag
ERROR: 0:9: 'in for stage inputs' : not supported for this version or the enabled extensions 
ERROR: 0:10: 'out for stage outputs' : not supported for this version or the enabled extensions 
ERROR: 0:54: '+' :  wrong operand types: no operation '+' exists that takes a left-hand operand of type '2-component vector of float' and a right operand of type '3-component vector of float' (or there is no acceptable conversion)
ERROR: 0:55: '*' :  wrong operand types: no operation '*' exists that takes a left-hand operand of type 'uniform 4X2 matrix of float' and a right operand of type '3-component vector of float' (or there is no acceptable conversion)
ERROR: 0:56: '+' :  wrong operand types: no operation '+' exists that takes a left-hand operand of type 'uniform 4X2 matrix of float' and a right operand of type 'smooth in 4-component vector of float' (or there is no acceptable conversion)
ERROR: 0:57: '=' :  cannot convert from 'const float' to 'int'
ERROR: 0:58: 'assign' :  cannot convert from 'bool' to 'float'
ERROR: 0:59: '+' :  wrong operand types: no operation '+' exists that takes a left-hand operand of type 'int' and a right operand of type 'bool' (or there is no acceptable conversion)
ERROR: 0:60: '*' :  wrong operand types: no operation '*' exists that takes a left-hand operand of type 'bool' and a right operand of type 'int' (or there is no acceptable conversion)
ERROR: 0:60: 'assign' :  cannot convert from 'bool' to 'float'
ERROR: 0:61: 'assign' :  cannot convert from 'int' to 'bool'
ERROR: 0:62: '+' :  wrong operand types: no operation '+' exists that takes a left-hand operand of type 'bool' and a right operand of type 'float' (or there is no acceptable conversion)
ERROR: 0:63: 'bitwise-or assign' : not supported for this version or the enabled extensions 
ERROR: 0:63: 'assign' :  cannot convert from 'bool' to 'float'
ERROR: 0:79: ':' :  wrong operand types: no operation ':' exists that takes a left-hand operand of type '4-component vector of float' and a right operand of type '4X4 matrix of float' (or there is no acceptable conversion)
ERROR: 0:79: 'assign' :  cannot convert from '4X4 matrix of float' to 'fragColor 4-component vector of float'
ERROR: 0:82: 'xr' : illegal - vector component fields not from the same set 
ERROR: 0:83: 'xyxyx' : illegal vector field selection 
ERROR: 0:83: 'scalar swizzle' : not supported with this profile: none
ERROR: 0:83: 'xy' : vector field selection out of range 
ERROR: 0:84: 'z' : vector field selection out of range 
ERROR: 0:85: 'assign' :  l-value required 
ERROR: 0:91: 'int' : overloaded functions must have the same return type 
ERROR: 0:91: 'main' : function already has a body 
ERROR: 0:91: 'int' :  main function cannot return a value
ERROR: 0:92: 'main' : function cannot take any parameter(s) 
ERROR: 0:94: 'a' : variables with qualifier 'const' must be initialized 
ERROR: 0:97: 'out' : overloaded functions must have the same parameter storage qualifiers for argument 1
ERROR: 0:99: 'return' : function return is not matching type: 
ERROR: 0:115: 'return' : void function cannot return a value 
ERROR: 0:125: 'gl_TexCoord' : redeclaration of array with size 
ERROR: 0:152: 'matrixCompMult' : no matching overloaded function found 
ERROR: 0:152: '=' :  cannot convert from 'const float' to '3X2 matrix of float'
ERROR: 0:153: 'matrixCompMult' : no matching overloaded function found 
ERROR: 0:153: '=' :  cannot convert from 'const float' to '3X4 matrix of float'
ERROR: 35 compilation errors.  No code generated.


ERROR: node is still EOpNull!
0:21  Function Definition: main( (void)
0:21    Function Parameters: 
0:23    Sequence
0:23      Sequence
0:23        move second child to first child (2X3 matrix of float)
0:23          'm23' (2X3 matrix of float)
0:23          Construct mat2x3 (2X3 matrix of float)
0:23            'm' (uniform 4X2 matrix of float)
0:27      Sequence
0:27        move second child to first child (structure{float f})
0:27          'sv' (structure{float f})
0:27          Construct structure (structure{float f})
0:27            Convert int to float (float)
0:27              'a' (int)
0:28      Sequence
0:28        move second child to first child (2-element array of float)
0:28          'ia' (2-element array of float)
0:28          Construct float (2-element array of float)
0:28            Constant:
0:28              3.000000
0:28            direct index (float)
0:28              'i' (smooth in 4-component vector of float)
0:28              Constant:
0:28                1 (const int)
0:29      Sequence
0:29        move second child to first child (float)
0:29          'f1' (float)
0:29          Constant:
0:29            1.000000
0:30      Sequence
0:30        move second child to first child (float)
0:30          'f' (float)
0:30          Convert int to float (float)
0:30            'a' (int)
0:31      move second child to first child (float)
0:31        'f' (float)
0:31        Convert int to float (float)
0:31          'a' (int)
0:33      Sequence
0:33        move second child to first child (3-component vector of float)
0:33          'v3' (3-component vector of float)
0:33          Convert int to float (3-component vector of float)
0:33            'iv3' (3-component vector of int)
0:34      move second child to first child (float)
0:34        'f' (float)
0:34        add (float)
0:34          'f' (float)
0:34          Convert int to float (float)
0:34            'a' (int)
0:35      move second child to first child (float)
0:35        'f' (float)
0:35        subtract (float)
0:35          Convert int to float (float)
0:35            'a' (int)
0:35          'f' (float)
0:36      add second child into first child (float)
0:36        'f' (float)
0:36        Convert int to float (float)
0:36          'a' (int)
0:37      move second child to first child (float)
0:37        'f' (float)
0:37        subtract (float)
0:37          Convert int to float (float)
0:37            'a' (int)
0:37          'f' (float)
0:38      multiply second child into first child (3-component vector of float)
0:38        'v3' (3-component vector of float)
0:38        Convert int to float (3-component vector of float)
0:38          'iv3' (3-component vector of int)
0:39      move second child to first child (3-component vector of float)
0:39        'v3' (3-component vector of float)
0:39        divide (3-component vector of float)
0:39          Convert int to float (3-component vector of float)
0:39            'iv3' (3-component vector of int)
0:39          Constant:
0:39            2.000000
0:40      move second child to first child (3-component vector of float)
0:40        'v3' (3-component vector of float)
0:40        vector-scale (3-component vector of float)
0:40          Constant:
0:40            3.000000
0:40          Convert int to float (3-component vector of float)
0:40            'iv3' (3-component vector of int)
0:41      move second child to first child (3-component vector of float)
0:41        'v3' (3-component vector of float)
0:41        vector-scale (3-component vector of float)
0:41          Constant:
0:41            2.000000
0:41          'v3' (3-component vector of float)
0:42      move second child to first child (3-component vector of float)
0:42        'v3' (3-component vector of float)
0:42        subtract (3-component vector of float)
0:42          'v3' (3-component vector of float)
0:42          Constant:
0:42            2.000000
0:43      Test condition and select (void)
0:43        Condition
0:47        logical-or (bool)
0:46          logical-or (bool)
0:45            logical-or (bool)
0:44              logical-or (bool)
0:43                logical-or (bool)
0:43                  Compare Less Than (bool)
0:43                    'f' (float)
0:43                    Convert int to float (float)
0:43                      'a' (int)
0:44                  Compare Less Than or Equal (bool)
0:44                    Convert int to float (float)
0:44                      'a' (int)
0:44                    'f' (float)
0:45                Compare Greater Than (bool)
0:45                  'f' (float)
0:45                  Convert int to float (float)
0:45                    'a' (int)
0:46              Compare Greater Than or Equal (bool)
0:46                'f' (float)
0:46                Convert int to float (float)
0:46                  'a' (int)
0:47            Compare Equal (bool)
0:47              Convert int to float (float)
0:47                'a' (int)
0:47              'f' (float)
0:48          Compare Not Equal (bool)
0:48            'f' (float)
0:48            Convert int to float (float)
0:48              'a' (int)
0:43        true case is null
0:49      move second child to first child (float)
0:49        'f' (float)
0:49        Test condition and select (float)
0:49          Condition
0:49          'b' (bool)
0:49          true case
0:49          Convert int to float (float)
0:49            'a' (int)
0:49          false case
0:49          'f' (float)
0:50      move second child to first child (float)
0:50        'f' (float)
0:50        Test condition and select (float)
0:50          Condition
0:50          'b' (bool)
0:50          true case
0:50          'f' (float)
0:50          false case
0:50          Convert int to float (float)
0:50            'a' (int)
0:51      move second child to first child (float)
0:51        'f' (float)
0:51        Convert int to float (float)
0:51          Test condition and select (int)
0:51            Condition
0:51            'b' (bool)
0:51            true case
0:51            'a' (int)
0:51            false case
0:51            'a' (int)
0:52      Sequence
0:52        move second child to first child (structure{float f})
0:52          'news' (structure{float f})
0:52          'sv' (structure{float f})
0:54      vector swizzle (2-component vector of float)
0:54        'i' (smooth in 4-component vector of float)
0:54        Sequence
0:54          Constant:
0:54            0 (const int)
0:54          Constant:
0:54            1 (const int)
0:55      'm' (uniform 4X2 matrix of float)
0:56      'm' (uniform 4X2 matrix of float)
0:58      'f' (float)
0:59      move second child to first child (float)
0:59        'f' (float)
0:59        Convert int to float (float)
0:59          'a' (int)
0:60      'f' (float)
0:61      'b' (bool)
0:62      move second child to first child (bool)
0:62        'b' (bool)
0:62        'b' (bool)
0:63      'f' (float)
0:65      move second child to first child (4-component vector of float)
0:65        'gl_FragColor' (fragColor 4-component vector of float)
0:65        Function Call: texture2D(s21;vf2; (4-component vector of float)
0:65          's2D' (uniform sampler2D)
0:65          'centTexCoord' (centroid smooth in 2-component vector of float)
0:?       Sequence
0:79        'gl_FragColor' (fragColor 4-component vector of float)
0:82      direct index (float)
0:82        'gl_FragColor' (fragColor 4-component vector of float)
0:82        Constant:
0:82          0 (const int)
0:83      direct index (float)
0:83        'gl_FragColor' (fragColor 4-component vector of float)
0:83        Constant:
0:83          0 (const int)
0:84      direct index (float)
0:84        'centTexCoord' (centroid smooth in 2-component vector of float)
0:84        Constant:
0:84          0 (const int)
0:85      move second child to first child (bool)
0:85        Comma (bool)
0:85          'a' (int)
0:85          'b' (bool)
0:85        Constant:
0:85          true (const bool)
0:91  Function Definition: main( (int)
0:91    Function Parameters: 
0:92  Function Definition: main(i1; (void)
0:92    Function Parameters: 
0:92      'a' (in int)
0:97  Function Definition: foo(f1; (int)
0:97    Function Parameters: 
0:97      'a' (out float)
0:99    Sequence
0:99      Branch: Return with expression
0:99        Constant:
0:99          3.200000
0:100      Function Call: foo(f1; (int)
0:100        'a' (out float)
0:103  Function Definition: gen(vf3; (bool)
0:103    Function Parameters: 
0:103      'v' (in 3-component vector of float)
0:105    Sequence
0:105      Test condition and select (void)
0:105        Condition
0:105        logical-and (bool)
0:105          Compare Less Than (bool)
0:105            Absolute value (float)
0:105              direct index (float)
0:105                'v' (in 3-component vector of float)
0:105                Constant:
0:105                  0 (const int)
0:105            Constant:
0:105              0.000100
0:105          Compare Less Than (bool)
0:105            Absolute value (float)
0:105              direct index (float)
0:105                'v' (in 3-component vector of float)
0:105                Constant:
0:105                  1 (const int)
0:105            Constant:
0:105              0.000100
0:105        true case
0:106        Branch: Return with expression
0:106          Constant:
0:106            true (const bool)
0:109  Function Definition: v1( (void)
0:109    Function Parameters: 
0:113  Function Definition: v2( (void)
0:113    Function Parameters: 
0:115    Sequence
0:115      Branch: Return with expression
0:115        Function Call: v1( (void)
0:118  Function Definition: atest( (void)
0:118    Function Parameters: 
0:120    Sequence
0:120      Sequence
0:120        move second child to first child (4-component vector of float)
0:120          'v' (4-component vector of float)
0:120          direct index (smooth 4-component vector of float)
0:120            'gl_TexCoord' (smooth in unsized array of 4-component vector of float)
0:120            Constant:
0:120              1 (const int)
0:121      add second child into first child (4-component vector of float)
0:121        'v' (4-component vector of float)
0:121        direct index (smooth 4-component vector of float)
0:121          'gl_TexCoord' (smooth in 6-element array of 4-component vector of float)
0:121          Constant:
0:121            3 (const int)
0:139  Function Definition: foo123( (void)
0:139    Function Parameters: 
0:141    Sequence
0:141      Sequence
0:141        move second child to first child (2X2 matrix of float)
0:141          'r2' (2X2 matrix of float)
0:141          component-wise multiply (2X2 matrix of float)
0:141            'm22' (2X2 matrix of float)
0:141            'm22' (2X2 matrix of float)
0:142      Sequence
0:142        move second child to first child (3X3 matrix of float)
0:142          'r3' (3X3 matrix of float)
0:142          component-wise multiply (3X3 matrix of float)
0:142            'm33' (3X3 matrix of float)
0:142            'm33' (3X3 matrix of float)
0:143      Sequence
0:143        move second child to first child (4X4 matrix of float)
0:143          'r4' (4X4 matrix of float)
0:143          component-wise multiply (4X4 matrix of float)
0:143            'm44' (4X4 matrix of float)
0:143            'm44' (4X4 matrix of float)
0:145      Sequence
0:145        move second child to first child (2X3 matrix of float)
0:145          'r23' (2X3 matrix of float)
0:145          component-wise multiply (2X3 matrix of float)
0:145            'm23' (2X3 matrix of float)
0:145            'm23' (2X3 matrix of float)
0:146      Sequence
0:146        move second child to first child (2X4 matrix of float)
0:146          'r24' (2X4 matrix of float)
0:146          component-wise multiply (2X4 matrix of float)
0:146            'm24' (2X4 matrix of float)
0:146            'm24' (2X4 matrix of float)
0:147      Sequence
0:147        move second child to first child (3X2 matrix of float)
0:147          'r32' (3X2 matrix of float)
0:147          component-wise multiply (3X2 matrix of float)
0:147            'm32' (3X2 matrix of float)
0:147            'm32' (3X2 matrix of float)
0:148      Sequence
0:148        move second child to first child (3X4 matrix of float)
0:148          'r34' (3X4 matrix of float)
0:148          component-wise multiply (3X4 matrix of float)
0:148            'm34' (3X4 matrix of float)
0:148            'm34' (3X4 matrix of float)
0:149      Sequence
0:149        move second child to first child (4X2 matrix of float)
0:149          'r42' (4X2 matrix of float)
0:149          component-wise multiply (4X2 matrix of float)
0:149            'm42' (4X2 matrix of float)
0:149            'm42' (4X2 matrix of float)
0:150      Sequence
0:150        move second child to first child (4X3 matrix of float)
0:150          'r43' (4X3 matrix of float)
0:150          component-wise multiply (4X3 matrix of float)
0:150            'm43' (4X3 matrix of float)
0:150            'm43' (4X3 matrix of float)
0:?   Linker Objects
0:?     'lowp' (float)
0:?     'mediump' (float)
0:?     'highp' (float)
0:?     'precision' (float)
0:?     'i' (smooth in 4-component vector of float)
0:?     'o' (out 4-component vector of float)
0:?     's2D' (uniform sampler2D)
0:?     'centTexCoord' (centroid smooth in 2-component vector of float)
0:?     'm' (uniform 4X2 matrix of float)
0:?     'imageBuffer' (float)
0:?     'uimage2DRect' (float)
0:?     'a' (int)
0:?     'gl_TexCoord' (smooth in 6-element array of 4-component vector of float)
0:?     'm22' (2X2 matrix of float)
0:?     'm23' (2X3 matrix of float)
0:?     'm24' (2X4 matrix of float)
0:?     'm32' (3X2 matrix of float)
0:?     'm33' (3X3 matrix of float)
0:?     'm34' (3X4 matrix of float)
0:?     'm42' (4X2 matrix of float)
0:?     'm43' (4X3 matrix of float)
0:?     'm44' (4X4 matrix of float)


Linked fragment stage:

ERROR: Linking fragment stage: Recursion detected:
    foo(f1; calling foo(f1;


