130.frag
Warning, version 130 is not yet complete; most features are present, but a few are missing.
ERROR: 0:25: 'textureGather(...)' : not supported for this version or the enabled extensions 
ERROR: 0:35: 'redeclaration' : cannot change the type of gl_Color
ERROR: 0:38: 'gl_Color' : redeclaring non-array as array 
ERROR: 0:39: 'redeclaration' : cannot change storage, memory, or auxiliary qualification of gl_Color
WARNING: 0:45: extension GL_ARB_texture_gather is being used for textureGather(...)
ERROR: 0:62: '<' :  wrong operand types: no operation '<' exists that takes a left-hand operand of type '3-component vector of bool' and a right operand of type '3-component vector of bool' (or there is no acceptable conversion)
ERROR: 0:63: '>' :  wrong operand types: no operation '>' exists that takes a left-hand operand of type '3-component vector of uint' and a right operand of type '3-component vector of uint' (or there is no acceptable conversion)
ERROR: 0:64: '>=' :  wrong operand types: no operation '>=' exists that takes a left-hand operand of type 'const 2-component vector of uint' and a right operand of type 'const 2-component vector of uint' (or there is no acceptable conversion)
ERROR: 0:80: 'textureGatherOffset' : no matching overloaded function found 
ERROR: 0:80: 'assign' :  cannot convert from 'const float' to '4-component vector of float'
ERROR: 0:81: 'textureGatherOffset(...)' : not supported for this version or the enabled extensions 
ERROR: 0:84: 'textureGatherOffset(...)' : not supported for this version or the enabled extensions 
ERROR: 0:85: 'textureGatherOffset(...)' : not supported for this version or the enabled extensions 
WARNING: 0:88: '#extension' : extension is only partially supported: GL_ARB_gpu_shader5
ERROR: 12 compilation errors.  No code generated.


ERROR: node is still EOpNull!
0:16  Function Definition: main( (void)
0:16    Function Parameters: 
0:18    Sequence
0:18      Sequence
0:18        move second child to first child (float)
0:18          'clip' (float)
0:18          direct index (smooth float)
0:18            'gl_ClipDistance' (smooth in unsized array of float)
0:18            Constant:
0:18              3 (const int)
0:23  Function Definition: foo( (void)
0:23    Function Parameters: 
0:25    Sequence
0:25      Sequence
0:25        move second child to first child (4-component vector of float)
0:25          's' (4-component vector of float)
0:25          Function Call: textureGather(sC1;vf3; (4-component vector of float)
0:25            'sampC' (uniform samplerCube)
0:25            Constant:
0:25              0.200000
0:25              0.200000
0:25              0.200000
0:30  Function Definition: bar( (void)
0:30    Function Parameters: 
0:32    Sequence
0:32      Sequence
0:32        move second child to first child (4-component vector of float)
0:32          's' (4-component vector of float)
0:32          Function Call: textureGather(sC1;vf3; (4-component vector of float)
0:32            'sampC' (uniform samplerCube)
0:32            Constant:
0:32              0.200000
0:32              0.200000
0:32              0.200000
0:43  Function Definition: bar2( (void)
0:43    Function Parameters: 
0:45    Sequence
0:45      Sequence
0:45        move second child to first child (4-component vector of float)
0:45          's' (4-component vector of float)
0:45          Function Call: textureGather(sC1;vf3; (4-component vector of float)
0:45            'sampC' (uniform samplerCube)
0:45            Constant:
0:45              0.200000
0:45              0.200000
0:45              0.200000
0:49      move second child to first child (3-component vector of bool)
0:49        'b3' (3-component vector of bool)
0:49        Compare Less Than (3-component vector of bool)
0:49          'uv3' (3-component vector of uint)
0:49          'uv3' (3-component vector of uint)
0:50      move second child to first child (3-component vector of bool)
0:50        'b3' (3-component vector of bool)
0:50        Equal (3-component vector of bool)
0:50          'uv3' (3-component vector of uint)
0:50          'uv3' (3-component vector of uint)
0:56      direct index (int)
0:56        'a1' (1-element array of int)
0:56        Constant:
0:56          0 (const int)
0:57      direct index (int)
0:57        'a2' (1-element array of int)
0:57        Constant:
0:57          0 (const int)
0:60      direct index (int)
0:60        'a3' (4-element array of int)
0:60        Constant:
0:60          3 (const int)
0:61      Compare Not Equal (bool)
0:61        'b3' (3-component vector of bool)
0:61        'b3' (3-component vector of bool)
0:62      Constant:
0:62        false (const bool)
0:63      Constant:
0:63        false (const bool)
0:64      Constant:
0:64        false (const bool)
0:65      Constant:
0:65        true (const bool)
0:66      Constant:
0:66        false (const bool)
0:77  Function Definition: bar23( (void)
0:77    Function Parameters: 
0:?     Sequence
0:80      's' (4-component vector of float)
0:81      move second child to first child (4-component vector of float)
0:81        's' (4-component vector of float)
0:81        Function Call: textureGatherOffset(sR21;vf2;vi2; (4-component vector of float)
0:81          'samp2DR' (uniform sampler2DRect)
0:81          Constant:
0:81            0.300000
0:81            0.300000
0:81          Constant:
0:81            1 (const int)
0:81            1 (const int)
0:82      move second child to first child (4-component vector of float)
0:82        's' (4-component vector of float)
0:82        Function Call: textureGatherOffset(s21;vf2;vi2; (4-component vector of float)
0:82          'samp2D' (uniform sampler2D)
0:82          Constant:
0:82            0.300000
0:82            0.300000
0:82          Constant:
0:82            1 (const int)
0:82            1 (const int)
0:83      move second child to first child (4-component vector of float)
0:83        's' (4-component vector of float)
0:83        Function Call: textureGatherOffset(sA21;vf3;vi2; (4-component vector of float)
0:83          'samp2DA' (uniform sampler2DArray)
0:83          Constant:
0:83            0.300000
0:83            0.300000
0:83            0.300000
0:83          Constant:
0:83            1 (const int)
0:83            1 (const int)
0:84      move second child to first child (4-component vector of float)
0:84        's' (4-component vector of float)
0:84        Function Call: textureGatherOffset(sS21;vf2;f1;vi2; (4-component vector of float)
0:84          'samp2DS' (uniform sampler2DShadow)
0:84          Constant:
0:84            0.300000
0:84            0.300000
0:84          Constant:
0:84            1.300000
0:84          Constant:
0:84            1 (const int)
0:84            1 (const int)
0:85      move second child to first child (4-component vector of float)
0:85        's' (4-component vector of float)
0:85        Function Call: textureGatherOffset(s21;vf2;vi2;i1; (4-component vector of float)
0:85          'samp2D' (uniform sampler2D)
0:85          Constant:
0:85            0.300000
0:85            0.300000
0:85          Constant:
0:85            1 (const int)
0:85            1 (const int)
0:85          Constant:
0:85            2 (const int)
0:90  Function Definition: bar234( (void)
0:90    Function Parameters: 
0:?     Sequence
0:93      move second child to first child (4-component vector of float)
0:93        's' (4-component vector of float)
0:93        Function Call: textureGatherOffset(s21;vf2;vi2; (4-component vector of float)
0:93          'samp2D' (uniform sampler2D)
0:93          Constant:
0:93            0.300000
0:93            0.300000
0:93          Constant:
0:93            1 (const int)
0:93            1 (const int)
0:94      move second child to first child (4-component vector of float)
0:94        's' (4-component vector of float)
0:94        Function Call: textureGatherOffset(sA21;vf3;vi2; (4-component vector of float)
0:94          'samp2DA' (uniform sampler2DArray)
0:94          Constant:
0:94            0.300000
0:94            0.300000
0:94            0.300000
0:94          Constant:
0:94            1 (const int)
0:94            1 (const int)
0:95      move second child to first child (4-component vector of float)
0:95        's' (4-component vector of float)
0:95        Function Call: textureGatherOffset(sR21;vf2;vi2; (4-component vector of float)
0:95          'samp2DR' (uniform sampler2DRect)
0:95          Constant:
0:95            0.300000
0:95            0.300000
0:95          Constant:
0:95            1 (const int)
0:95            1 (const int)
0:96      move second child to first child (4-component vector of float)
0:96        's' (4-component vector of float)
0:96        Function Call: textureGatherOffset(sS21;vf2;f1;vi2; (4-component vector of float)
0:96          'samp2DS' (uniform sampler2DShadow)
0:96          Constant:
0:96            0.300000
0:96            0.300000
0:96          Constant:
0:96            1.300000
0:96          Constant:
0:96            1 (const int)
0:96            1 (const int)
0:97      move second child to first child (4-component vector of float)
0:97        's' (4-component vector of float)
0:97        Function Call: textureGatherOffset(s21;vf2;vi2;i1; (4-component vector of float)
0:97          'samp2D' (uniform sampler2D)
0:97          Constant:
0:97            0.300000
0:97            0.300000
0:97          Constant:
0:97            1 (const int)
0:97            1 (const int)
0:97          Constant:
0:97            2 (const int)
0:?   Linker Objects
0:?     'a' (3-component vector of float)
0:?     'b' (float)
0:?     'c' (int)
0:?     'i' (smooth in 4-component vector of float)
0:?     'o' (out 4-component vector of float)
0:?     'fflat' (flat in float)
0:?     'fsmooth' (smooth in float)
0:?     'fnop' (noperspective in float)
0:?     'gl_ClipDistance' (smooth in unsized array of float)
0:?     'sampC' (uniform samplerCube)
0:?     'gl_Color' (smooth in 4-component vector of float)
0:?     'gl_Color' (flat in 4-component vector of float)
0:?     'samp2D' (uniform sampler2D)
0:?     'samp2DS' (uniform sampler2DShadow)
0:?     'samp2DR' (uniform sampler2DRect)
0:?     'samp2DA' (uniform sampler2DArray)


Linked fragment stage:



